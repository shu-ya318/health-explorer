/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/algoliasearch";
exports.ids = ["vendor-chunks/algoliasearch"];
exports.modules = {

/***/ "(ssr)/./node_modules/algoliasearch/dist/algoliasearch.cjs.js":
/*!**************************************************************!*\
  !*** ./node_modules/algoliasearch/dist/algoliasearch.cjs.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar cacheCommon = __webpack_require__(/*! @algolia/cache-common */ \"(ssr)/./node_modules/@algolia/cache-common/dist/cache-common.esm.js\");\nvar cacheInMemory = __webpack_require__(/*! @algolia/cache-in-memory */ \"(ssr)/./node_modules/@algolia/cache-in-memory/dist/cache-in-memory.esm.js\");\nvar clientAnalytics = __webpack_require__(/*! @algolia/client-analytics */ \"(ssr)/./node_modules/@algolia/client-analytics/dist/client-analytics.esm.js\");\nvar clientCommon = __webpack_require__(/*! @algolia/client-common */ \"(ssr)/./node_modules/@algolia/client-common/dist/client-common.esm.js\");\nvar clientPersonalization = __webpack_require__(/*! @algolia/client-personalization */ \"(ssr)/./node_modules/@algolia/client-personalization/dist/client-personalization.esm.js\");\nvar clientSearch = __webpack_require__(/*! @algolia/client-search */ \"(ssr)/./node_modules/@algolia/client-search/dist/client-search.esm.js\");\nvar loggerCommon = __webpack_require__(/*! @algolia/logger-common */ \"(ssr)/./node_modules/@algolia/logger-common/dist/logger-common.esm.js\");\nvar recommend = __webpack_require__(/*! @algolia/recommend */ \"(ssr)/./node_modules/@algolia/recommend/index.js\");\nvar requesterNodeHttp = __webpack_require__(/*! @algolia/requester-node-http */ \"(ssr)/./node_modules/@algolia/requester-node-http/dist/requester-node-http.esm.js\");\nvar transporter = __webpack_require__(/*! @algolia/transporter */ \"(ssr)/./node_modules/@algolia/transporter/dist/transporter.esm.js\");\n\nfunction algoliasearch(appId, apiKey, options) {\r\n    const commonOptions = {\r\n        appId,\r\n        apiKey,\r\n        timeouts: {\r\n            connect: 2,\r\n            read: 5,\r\n            write: 30,\r\n        },\r\n        requester: requesterNodeHttp.createNodeHttpRequester(),\r\n        logger: loggerCommon.createNullLogger(),\r\n        responsesCache: cacheCommon.createNullCache(),\r\n        requestsCache: cacheCommon.createNullCache(),\r\n        hostsCache: cacheInMemory.createInMemoryCache(),\r\n        userAgent: transporter.createUserAgent(clientCommon.version).add({\r\n            segment: 'Node.js',\r\n            version: process.versions.node,\r\n        }),\r\n    };\r\n    const searchClientOptions = { ...commonOptions, ...options };\r\n    const initPersonalization = () => (clientOptions) => {\r\n        return clientPersonalization.createPersonalizationClient({\r\n            ...commonOptions,\r\n            ...clientOptions,\r\n            methods: {\r\n                getPersonalizationStrategy: clientPersonalization.getPersonalizationStrategy,\r\n                setPersonalizationStrategy: clientPersonalization.setPersonalizationStrategy,\r\n            },\r\n        });\r\n    };\r\n    return clientSearch.createSearchClient({\r\n        ...searchClientOptions,\r\n        methods: {\r\n            search: clientSearch.multipleQueries,\r\n            searchForFacetValues: clientSearch.multipleSearchForFacetValues,\r\n            multipleBatch: clientSearch.multipleBatch,\r\n            multipleGetObjects: clientSearch.multipleGetObjects,\r\n            multipleQueries: clientSearch.multipleQueries,\r\n            copyIndex: clientSearch.copyIndex,\r\n            copySettings: clientSearch.copySettings,\r\n            copyRules: clientSearch.copyRules,\r\n            copySynonyms: clientSearch.copySynonyms,\r\n            moveIndex: clientSearch.moveIndex,\r\n            listIndices: clientSearch.listIndices,\r\n            getLogs: clientSearch.getLogs,\r\n            listClusters: clientSearch.listClusters,\r\n            multipleSearchForFacetValues: clientSearch.multipleSearchForFacetValues,\r\n            getApiKey: clientSearch.getApiKey,\r\n            addApiKey: clientSearch.addApiKey,\r\n            listApiKeys: clientSearch.listApiKeys,\r\n            updateApiKey: clientSearch.updateApiKey,\r\n            deleteApiKey: clientSearch.deleteApiKey,\r\n            restoreApiKey: clientSearch.restoreApiKey,\r\n            assignUserID: clientSearch.assignUserID,\r\n            assignUserIDs: clientSearch.assignUserIDs,\r\n            getUserID: clientSearch.getUserID,\r\n            searchUserIDs: clientSearch.searchUserIDs,\r\n            listUserIDs: clientSearch.listUserIDs,\r\n            getTopUserIDs: clientSearch.getTopUserIDs,\r\n            removeUserID: clientSearch.removeUserID,\r\n            hasPendingMappings: clientSearch.hasPendingMappings,\r\n            generateSecuredApiKey: clientSearch.generateSecuredApiKey,\r\n            getSecuredApiKeyRemainingValidity: clientSearch.getSecuredApiKeyRemainingValidity,\r\n            destroy: clientCommon.destroy,\r\n            clearDictionaryEntries: clientSearch.clearDictionaryEntries,\r\n            deleteDictionaryEntries: clientSearch.deleteDictionaryEntries,\r\n            getDictionarySettings: clientSearch.getDictionarySettings,\r\n            getAppTask: clientSearch.getAppTask,\r\n            replaceDictionaryEntries: clientSearch.replaceDictionaryEntries,\r\n            saveDictionaryEntries: clientSearch.saveDictionaryEntries,\r\n            searchDictionaryEntries: clientSearch.searchDictionaryEntries,\r\n            setDictionarySettings: clientSearch.setDictionarySettings,\r\n            waitAppTask: clientSearch.waitAppTask,\r\n            customRequest: clientSearch.customRequest,\r\n            initIndex: base => (indexName) => {\r\n                return clientSearch.initIndex(base)(indexName, {\r\n                    methods: {\r\n                        batch: clientSearch.batch,\r\n                        delete: clientSearch.deleteIndex,\r\n                        findAnswers: clientSearch.findAnswers,\r\n                        getObject: clientSearch.getObject,\r\n                        getObjects: clientSearch.getObjects,\r\n                        saveObject: clientSearch.saveObject,\r\n                        saveObjects: clientSearch.saveObjects,\r\n                        search: clientSearch.search,\r\n                        searchForFacetValues: clientSearch.searchForFacetValues,\r\n                        waitTask: clientSearch.waitTask,\r\n                        setSettings: clientSearch.setSettings,\r\n                        getSettings: clientSearch.getSettings,\r\n                        partialUpdateObject: clientSearch.partialUpdateObject,\r\n                        partialUpdateObjects: clientSearch.partialUpdateObjects,\r\n                        deleteObject: clientSearch.deleteObject,\r\n                        deleteObjects: clientSearch.deleteObjects,\r\n                        deleteBy: clientSearch.deleteBy,\r\n                        clearObjects: clientSearch.clearObjects,\r\n                        browseObjects: clientSearch.browseObjects,\r\n                        getObjectPosition: clientSearch.getObjectPosition,\r\n                        findObject: clientSearch.findObject,\r\n                        exists: clientSearch.exists,\r\n                        saveSynonym: clientSearch.saveSynonym,\r\n                        saveSynonyms: clientSearch.saveSynonyms,\r\n                        getSynonym: clientSearch.getSynonym,\r\n                        searchSynonyms: clientSearch.searchSynonyms,\r\n                        browseSynonyms: clientSearch.browseSynonyms,\r\n                        deleteSynonym: clientSearch.deleteSynonym,\r\n                        clearSynonyms: clientSearch.clearSynonyms,\r\n                        replaceAllObjects: clientSearch.replaceAllObjects,\r\n                        replaceAllSynonyms: clientSearch.replaceAllSynonyms,\r\n                        searchRules: clientSearch.searchRules,\r\n                        getRule: clientSearch.getRule,\r\n                        deleteRule: clientSearch.deleteRule,\r\n                        saveRule: clientSearch.saveRule,\r\n                        saveRules: clientSearch.saveRules,\r\n                        replaceAllRules: clientSearch.replaceAllRules,\r\n                        browseRules: clientSearch.browseRules,\r\n                        clearRules: clientSearch.clearRules,\r\n                    },\r\n                });\r\n            },\r\n            initAnalytics: () => (clientOptions) => {\r\n                return clientAnalytics.createAnalyticsClient({\r\n                    ...commonOptions,\r\n                    ...clientOptions,\r\n                    methods: {\r\n                        addABTest: clientAnalytics.addABTest,\r\n                        getABTest: clientAnalytics.getABTest,\r\n                        getABTests: clientAnalytics.getABTests,\r\n                        stopABTest: clientAnalytics.stopABTest,\r\n                        deleteABTest: clientAnalytics.deleteABTest,\r\n                    },\r\n                });\r\n            },\r\n            initPersonalization,\r\n            initRecommendation: () => (clientOptions) => {\r\n                searchClientOptions.logger.info('The `initRecommendation` method is deprecated. Use `initPersonalization` instead.');\r\n                return initPersonalization()(clientOptions);\r\n            },\r\n            getRecommendations: recommend.getRecommendations,\r\n            getFrequentlyBoughtTogether: recommend.getFrequentlyBoughtTogether,\r\n            getLookingSimilar: recommend.getLookingSimilar,\r\n            getRecommendedForYou: recommend.getRecommendedForYou,\r\n            getRelatedProducts: recommend.getRelatedProducts,\r\n            getTrendingFacets: recommend.getTrendingFacets,\r\n            getTrendingItems: recommend.getTrendingItems,\r\n        },\r\n    });\r\n}\r\n// eslint-disable-next-line functional/immutable-data\r\nalgoliasearch.version = clientCommon.version;\n\nmodule.exports = algoliasearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/algoliasearch/dist/algoliasearch.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/algoliasearch/index.js":
/*!*********************************************!*\
  !*** ./node_modules/algoliasearch/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint-disable functional/immutable-data, import/no-commonjs */\nconst algoliasearch = __webpack_require__(/*! ./dist/algoliasearch.cjs.js */ \"(ssr)/./node_modules/algoliasearch/dist/algoliasearch.cjs.js\");\n\n/**\n * The Common JS build is the default entry point for the Node environment. Keep in\n * in mind, that for the browser environment, we hint the bundler to use the UMD\n * build instead as specified on the key `browser` of our `package.json` file.\n */\nmodule.exports = algoliasearch;\n\n/**\n * In addition, we also set explicitly the default export below making\n * this Common JS module in compliance with es6 modules specification.\n */\nmodule.exports[\"default\"] = algoliasearch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWxnb2xpYXNlYXJjaC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLGlHQUE2Qjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoLWV4cGxvcmVyLy4vbm9kZV9tb2R1bGVzL2FsZ29saWFzZWFyY2gvaW5kZXguanM/ZjgzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBmdW5jdGlvbmFsL2ltbXV0YWJsZS1kYXRhLCBpbXBvcnQvbm8tY29tbW9uanMgKi9cbmNvbnN0IGFsZ29saWFzZWFyY2ggPSByZXF1aXJlKCcuL2Rpc3QvYWxnb2xpYXNlYXJjaC5janMuanMnKTtcblxuLyoqXG4gKiBUaGUgQ29tbW9uIEpTIGJ1aWxkIGlzIHRoZSBkZWZhdWx0IGVudHJ5IHBvaW50IGZvciB0aGUgTm9kZSBlbnZpcm9ubWVudC4gS2VlcCBpblxuICogaW4gbWluZCwgdGhhdCBmb3IgdGhlIGJyb3dzZXIgZW52aXJvbm1lbnQsIHdlIGhpbnQgdGhlIGJ1bmRsZXIgdG8gdXNlIHRoZSBVTURcbiAqIGJ1aWxkIGluc3RlYWQgYXMgc3BlY2lmaWVkIG9uIHRoZSBrZXkgYGJyb3dzZXJgIG9mIG91ciBgcGFja2FnZS5qc29uYCBmaWxlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFsZ29saWFzZWFyY2g7XG5cbi8qKlxuICogSW4gYWRkaXRpb24sIHdlIGFsc28gc2V0IGV4cGxpY2l0bHkgdGhlIGRlZmF1bHQgZXhwb3J0IGJlbG93IG1ha2luZ1xuICogdGhpcyBDb21tb24gSlMgbW9kdWxlIGluIGNvbXBsaWFuY2Ugd2l0aCBlczYgbW9kdWxlcyBzcGVjaWZpY2F0aW9uLlxuICovXG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gYWxnb2xpYXNlYXJjaDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/algoliasearch/index.js\n");

/***/ })

};
;